# Generated by Django 5.2.4 on 2025-07-21 10:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('location_missing', 'Missing from Last Known Location'), ('safe_zone_exit', 'Exited Safe Zone'), ('medication_reminder', 'Medication Reminder'), ('check_in_missed', 'Missed Check-in'), ('battery_low', 'Low Battery'), ('emergency_button', 'Emergency Button Pressed'), ('fall_detection', 'Fall Detected'), ('geofence_violation', 'Geofence Violation'), ('device_offline', 'Device Offline')], max_length=30)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='active', max_length=15)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.TextField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sms_sent', models.BooleanField(default=False)),
                ('email_sent', models.BooleanField(default=False)),
                ('push_notification_sent', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('enable_sms_alerts', models.BooleanField(default=True)),
                ('enable_email_alerts', models.BooleanField(default=True)),
                ('enable_push_notifications', models.BooleanField(default=True)),
                ('enable_emergency_alerts', models.BooleanField(default=True)),
                ('enable_checkin_reminders', models.BooleanField(default=True)),
                ('enable_location_alerts', models.BooleanField(default=True)),
                ('location_update_interval_minutes', models.PositiveIntegerField(default=5)),
                ('gps_accuracy_threshold_meters', models.PositiveIntegerField(default=50)),
                ('session_timeout_minutes', models.PositiveIntegerField(default=60)),
                ('max_active_alerts', models.PositiveIntegerField(default=100)),
                ('data_retention_days', models.PositiveIntegerField(default=365)),
                ('mapbox_api_key', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Settings',
                'verbose_name_plural': 'System Settings',
            },
        ),
        migrations.CreateModel(
            name='VulnerablePerson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField()),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField()),
                ('current_location', models.TextField(blank=True, null=True)),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk')], default='low', max_length=10)),
                ('current_status', models.CharField(choices=[('safe', 'Safe'), ('warning', 'Warning'), ('emergency', 'Emergency')], default='safe', max_length=15)),
                ('medical_conditions', models.TextField(blank=True, null=True)),
                ('medications', models.TextField(blank=True, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('gps_device_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('is_being_monitored', models.BooleanField(default=False)),
                ('last_known_location', models.TextField(blank=True, null=True)),
                ('last_contact_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SafeZone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('center_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('center_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('radius_meters', models.PositiveIntegerField(default=100)),
                ('active_start_time', models.TimeField(blank=True, null=True)),
                ('active_end_time', models.TimeField(blank=True, null=True)),
                ('active_days', models.CharField(default='1234567', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='safe_zones', to='VTPS.vulnerableperson')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recipient', models.CharField(max_length=200)),
                ('notification_type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='pending', max_length=15)),
                ('message', models.TextField()),
                ('error_message', models.TextField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('alert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='VTPS.alert')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='VTPS.vulnerableperson')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('relationship', models.CharField(choices=[('son', 'Son'), ('daughter', 'Daughter'), ('spouse', 'Spouse'), ('sibling', 'Sibling'), ('parent', 'Parent'), ('friend', 'Friend'), ('caregiver', 'Caregiver'), ('other', 'Other')], max_length=20)),
                ('phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contacts', to='VTPS.vulnerableperson')),
            ],
            options={
                'ordering': ['-is_primary', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CheckInSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('custom', 'Custom')], default='daily', max_length=10)),
                ('scheduled_time', models.TimeField()),
                ('days_of_week', models.CharField(default='1234567', max_length=20)),
                ('reminder_minutes_before', models.PositiveIntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkin_schedules', to='VTPS.vulnerableperson')),
            ],
        ),
        migrations.CreateModel(
            name='CheckInLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scheduled_time', models.DateTimeField()),
                ('actual_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('missed', 'Missed'), ('late', 'Late')], default='completed', max_length=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkin_logs', to='VTPS.checkinschedule')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkin_logs', to='VTPS.vulnerableperson')),
            ],
            options={
                'ordering': ['-scheduled_time'],
            },
        ),
        migrations.AddField(
            model_name='alert',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='VTPS.vulnerableperson'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('supervisor', 'Supervisor'), ('operator', 'Operator'), ('caregiver', 'Caregiver')], default='operator', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('is_active_session', models.BooleanField(default=False)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='vulnerableperson',
            name='assigned_supervisor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_persons', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='vulnerableperson',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_persons', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alert',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alert',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LocationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('altitude', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('speed', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('battery_level', models.PositiveIntegerField(blank=True, null=True)),
                ('location_description', models.TextField(blank=True, null=True)),
                ('is_safe_zone', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_logs', to='VTPS.vulnerableperson')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['person', '-timestamp'], name='VTPS_locati_person__30e741_idx'), models.Index(fields=['timestamp'], name='VTPS_locati_timesta_cedba2_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['status', '-created_at'], name='VTPS_alert_status_badba8_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['priority', '-created_at'], name='VTPS_alert_priorit_98f72e_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['person', '-created_at'], name='VTPS_alert_person__9695ae_idx'),
        ),
    ]
